{"version":3,"sources":["setup.js","ghostMoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","GameBoard.js","Pacman.js","Ghost.js","index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","randomMovement","position","direction","objectExists","dir","nextMovePos","keys","Object","key","Math","floor","random","length","GameBoard","DOMGrid","pos","object","grid","classList","contains","dotCount","gameWin","div","document","createElement","add","innerHTML","appendChild","level","style","cssText","forEach","square","push","classes","remove","deg","transform","character","shouldMove","getNextMove","objectExist","makeMove","classesToRemove","classesToAdd","rotateDiv","removeObject","addObject","setNewPos","board","createGrid","Pacman","speed","startPos","e","keyCode","timer","powerPill","Ghost","name","isScared","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","score","powerPillActive","powerPillTimer","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","gameLoop","moveCharacter","soundDot","soundPill","clearTimeout","setTimeout","startGame","soundGameStart","addEventListener","setInterval"],"mappings":";AAuDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAvDA,IAAMA,EAAY,GAuDlB,QAAA,UAAA,EAtDA,IAAMC,EAAY,GAsDlB,QAAA,UAAA,EArDA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAkCP,QAAA,WAAA,EA9BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAkBN,QAAA,YAAA,EAdA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"vanilla_js_pacman.91834620.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\r\n\r\n//basic random movement\r\nexport function randomMovement(position, direction, objectExists) {\r\n    let dir = direction;\r\n    let nextMovePos = position + dir.movement;\r\n\r\n    //create array of direction fom object keys\r\n    const keys = Object.keys(DIRECTIONS);\r\n\r\n    while (\r\n        objectExists(nextMovePos, OBJECT_TYPE.WALL) ||\r\n        objectExists(nextMovePos, OBJECT_TYPE.GHOST)\r\n    ) {\r\n        //get random key from array\r\n        const key = keys[Math.floor(Math.random() * keys.length)];\r\n        //set new move and position\r\n        dir = DIRECTIONS[key];\r\n        nextMovePos = position + dir.movement;\r\n    }\r\n\r\n    return { nextMovePos, direction: dir };\r\n}\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\r\n\r\nclass GameBoard {\r\n\r\n    constructor(DOMGrid) {\r\n        this.dotCount = 0;\r\n        this.grid = [];\r\n        this.DOMGrid = DOMGrid;\r\n    }\r\n\r\n    showGameStatus(gameWin) {\r\n        const div = document.createElement('div');\r\n        div.classList.add('game-status');\r\n        div.innerHTML = `${gameWin ? 'WIN! WIN!' : 'GAME OVER!'}`;\r\n        this.DOMGrid.appendChild(div);\r\n    }\r\n\r\n    createGrid(level) {\r\n        this.dotCount = 0;\r\n        this.grid = [];\r\n        this.DOMGrid.innerHTML = '';\r\n        this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px)`;\r\n\r\n        //now draw the board\r\n        level.forEach((square) => {\r\n            const div = document.createElement('div');\r\n            div.classList.add('square', CLASS_LIST[square]);\r\n            div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\r\n            this.DOMGrid.appendChild(div);\r\n            this.grid.push(div);\r\n\r\n            //add dot count if class is dot type\r\n            if (CLASS_LIST[square] === OBJECT_TYPE.DOT) {\r\n                this.dotCount++\r\n            }\r\n        });\r\n    }\r\n\r\n    addObject(pos, classes) {\r\n        this.grid[pos].classList.add(...classes);\r\n    }\r\n\r\n    removeObject(pos, classes) {\r\n        this.grid[pos].classList.remove(...classes);\r\n    }\r\n\r\n    objectExist = (pos, object) => {\r\n        return this.grid[pos].classList.contains(object);\r\n    }\r\n\r\n    rotateDiv(pos, deg) {\r\n        this.grid[pos].style.transform = `rotate(${deg}deg)`;\r\n    }\r\n\r\n    moveCharacter(character) {\r\n\r\n        if (character.shouldMove()) {\r\n            const { nextMovePos, direction } = character.getNextMove(\r\n                this.objectExist\r\n            );\r\n\r\n            const { classesToRemove, classesToAdd } = character.makeMove();\r\n\r\n            if (character.rotation && nextMovePos !== character.pos) {\r\n                this.rotateDiv(nextMovePos, character.dir.rotation);\r\n                this.rotateDiv(character.pos, 0);\r\n            }\r\n\r\n            this.removeObject(character.pos, classesToRemove);\r\n            this.addObject(nextMovePos, classesToAdd);\r\n\r\n            //set position of character\r\n            character.setNewPos(nextMovePos, direction);\r\n        }\r\n    }\r\n\r\n    //create static method to instantiate this\r\n    static createGameBoard(DOMGrid, level) {\r\n        const board = new this(DOMGrid);\r\n        //now actually create grid\r\n        board.createGrid(level);\r\n        return board;\r\n    }\r\n}\r\n\r\nexport default GameBoard;","import { OBJECT_TYPE, DIRECTIONS } from './setup';\r\n\r\nclass Pacman {\r\n    constructor(speed, startPos) {\r\n        this.pos = startPos;\r\n        this.speed = speed;\r\n        this.dir = null;\r\n        this.timer = 0;\r\n        this.powerPill = false;\r\n        this.rotation = true;\r\n    }\r\n\r\n    shouldMove() {\r\n        // Don't move before a key is pressed\r\n        if (!this.dir) {\r\n            return;\r\n        }\r\n\r\n        if (this.timer === this.speed) {\r\n            this.timer = 0;\r\n            return true;\r\n        }\r\n        this.timer++;\r\n    }\r\n\r\n    getNextMove(objectExist) {\r\n        let nextMovePos = this.pos + this.dir.movement;\r\n\r\n        // check for collision for wall or lair\r\n        if (\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\r\n        ) {\r\n            nextMovePos = this.pos;\r\n        }\r\n\r\n        return { nextMovePos, direction: this.dir };\r\n    }\r\n\r\n    makeMove() {\r\n        const classesToRemove = [OBJECT_TYPE.PACMAN];\r\n        const classesToAdd = [OBJECT_TYPE.PACMAN];\r\n\r\n        return { classesToRemove, classesToAdd };\r\n    }\r\n\r\n    setNewPos(nextMovePos) {\r\n        this.pos = nextMovePos;\r\n    }\r\n\r\n    handleKeyInput = (e, objectExist) => {\r\n        let dir;\r\n\r\n        if (e.keyCode >= 37 && e.keyCode <= 40) {\r\n            dir = DIRECTIONS[e.key];\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        //if it's a wall stop movement\r\n        const nextMovePos = this.pos + dir.movement;\r\n        if (objectExist(nextMovePos, OBJECT_TYPE.WALL)) {\r\n            return;\r\n        }\r\n\r\n        this.dir = dir;\r\n    };\r\n}\r\n\r\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE } from './setup';\r\n\r\nclass Ghost {\r\n\r\n    constructor(speed = 5, startPos, movement, name) {\r\n        this.name = name;\r\n        this.movement = movement;\r\n        this.startPos = startPos;\r\n        this.pos = startPos;\r\n        this.dir = DIRECTIONS.ArrowRight;\r\n        this.speed = speed;\r\n        this.timer = 0;\r\n        this.isScared = false;\r\n        this.rotation = false;\r\n    }\r\n\r\n    shouldMove() {\r\n\r\n        if (this.timer === this.speed) {\r\n            this.timer = 0;\r\n            return true;\r\n        }\r\n\r\n        this.timer++;\r\n        return false;\r\n    }\r\n\r\n    getNextMove(objectExist) {\r\n        const { nextMovePos, direction } = this.movement(\r\n            this.pos,\r\n            this.dir,\r\n            objectExist\r\n        );\r\n\r\n        return { nextMovePos, direction };\r\n    }\r\n\r\n    makeMove() {\r\n        const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\r\n        let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\r\n\r\n        //only add scared if ghost is scared\r\n        if (this.isScared) {\r\n            classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\r\n        }\r\n\r\n        return { classesToRemove, classesToAdd };\r\n    }\r\n\r\n\r\n    setNewPos(nextMovePos, direction) {\r\n        this.pos = nextMovePos;\r\n        this.dir = direction;\r\n    }\r\n}\r\n\r\nexport default Ghost;\r\n","import { LEVEL, OBJECT_TYPE } from './setup';\nimport { randomMovement } from './ghostMoves';\n\nimport GameBoard from './GameBoard';\nimport Pacman from './Pacman';\nimport Ghost from './Ghost';\n\n// Sounds\nimport soundDot from './sounds/munch.wav';\nimport soundPill from './sounds/pill.wav';\nimport soundGameStart from './sounds/game_start.wav';\nimport soundGameOver from './sounds/death.wav';\nimport soundGhost from './sounds/eat_ghost.wav';\n\n//get DOM elements\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n\n//game constants\nconst POWER_PILL_TIME = 10000; //ms\nconst GLOBAL_SPEED = 80; //ms\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n//initial set-up\nlet score = 0\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\nfunction playAudio(audio) {\n    const soundEffect = new Audio(audio);\n    soundEffect.play();\n}\n\nfunction gameOver(pacman, grid) {\n\n    playAudio(soundGameOver);\n\n    document.removeEventListener('keydown', e => pacman.handleKeyInput(e, gameBoard.objectExist));\n\n    gameBoard.showGameStatus(gameWin);\n\n    //stop the game\n    clearInterval(timer);\n    startButton.classList.remove('hide')\n}\n\nfunction checkCollision(pacman, ghosts) {\n    const collidedGhost = ghosts.find(ghost => pacman.pos === ghost.pos);\n\n    //see if have collided ghost\n    if (collidedGhost) {\n\n        if (pacman.powerPill) {\n\n            playAudio(soundGhost);\n\n            gameBoard.removeObject(collidedGhost.pos, [\n                OBJECT_TYPE.GHOST,\n                OBJECT_TYPE.SCARED,\n                collidedGhost.name\n            ]);\n\n            //reset ghost position\n            collidedGhost.pos = collidedGhost.startPos;\n            score += 100;\n        }\n        else {\n            //pacman dies\n            gameBoard.removeObject(pacman.pos, [\n                OBJECT_TYPE.PACMAN\n            ]);\n            gameBoard.rotateDiv(pacman.pos, 0);\n            gameOver(pacman, gameGrid);\n        }\n\n    }\n}\n\nfunction gameLoop(pacman, ghosts) {\n\n    gameBoard.moveCharacter(pacman);\n    checkCollision(pacman, ghosts);\n\n    ghosts.forEach(ghost => gameBoard.moveCharacter(ghost));\n    checkCollision(pacman, ghosts);\n\n    //check pacman eats dot\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n        playAudio(soundDot);\n        gameBoard.removeObject(pacman.pos, [\n            OBJECT_TYPE.DOT\n        ]);\n        gameBoard.dotCount--\n        score += 10;\n    }\n\n    //check if pacman eats power pill\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n        playAudio(soundPill);\n        gameBoard.removeObject(pacman.pos, [\n            OBJECT_TYPE.PILL\n        ]);\n\n        pacman.powerPill = true;\n        score += 50;\n\n        clearTimeout(powerPillTimer);\n        powerPillTimer = setTimeout(\n            () => (pacman.powerPill = false),\n            POWER_PILL_TIME\n        );\n    }\n\n    //change ghost scare mode \n    if (pacman.powerPill !== powerPillActive) {\n        powerPillActive = pacman.powerPill;\n        ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\n    }\n\n    //check if all dots eaten\n    if (gameBoard.dotCount === 0) {\n        gameWin = true;\n        gameOver(pacman, ghosts);\n    }\n\n    //show the score\n    scoreTable.innerHTML = `<span class=\"nes-text is-primary\">${score}</span>`;\n}\n\nfunction startGame() {\n\n    playAudio(soundGameStart);\n\n    gameWin = false;\n    powerPillActive = false;\n    score = 0;\n\n    startButton.classList.add('hide');\n\n    //new game grid\n    gameBoard.createGrid(LEVEL);\n\n    //create pacman\n    const pacman = new Pacman(2, 287);\n    gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n    //add listeners for pacman\n    document.addEventListener('keydown', (e) => {\n        pacman.handleKeyInput(e, gameBoard.objectExist);\n    });\n\n    //create ghosts\n    const ghosts = [\n        new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n        new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n        new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n        new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE)\n    ]\n\n    //begin game loop\n    timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n\n}\n\n//init game event listeners\nstartButton.addEventListener('click', startGame);"]}